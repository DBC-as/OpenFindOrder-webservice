; Inifile for openfindorder

[setup]
; To close a service, set service_http_error
; service status - values:
;service_http_error = HTTP/1.0 404 Not Found
;service_http_error = HTTP/1.1 410 Gone
;service_http_error = HTTP/1.0 503 Service Unavailable

version = 2.1

; wsdl for service
wsdl = openfindorder.wsdl

; in_house_domain may use ?ShowInfo and use create_sample form
;in_house_domain = .dbc.dk

; set to TRUE to expose the create_sample form
;show_samples = 1
;show_samples_ip_list = 127.0.0.1-127.0.0.2

; path to xml-examples
xmldir = ./xml

; validate
;validate[request] = openfindorder.xsd
;validate[response] = openfindorder.xsd

; soapActions and their corresponding request structure
; Can be found in the wsdl but is stated here for convenience
soapAction[findAllOrders] = findAllOrdersRequest
soapAction[findAllIllOrders] = findAllIllOrdersRequest
soapAction[findAllNonIllOrders] = findAllNonIllOrdersRequest
soapAction[findOpenIllOrders] = findOpenIllOrdersRequest
soapAction[findClosedIllOrders] = findClosedIllOrdersRequest
soapAction[findSpecificOrder] = findSpecificOrderRequest
soapAction[findOrdersFromUser] = findOrdersFromUserRequest
soapAction[findOrdersFromUnknownUser] = findOrdersFromUnknownUserRequest
soapAction[findLocalizedEndUserOrders] = findLocalizedEndUserOrdersRequest
soapAction[findNonLocalizedEndUserOrders] = findNonLocalizedEndUserOrdersRequest
soapAction[findOrdersWithAutoForwardReason] = findOrdersWithAutoForwardReasonRequest
soapAction[findAutomatedOrders] = findAutomatedOrdersRequest
soapAction[findNonAutomatedOrders] = findNonAutomatedOrdersRequest
soapAction[findOrderType] = findOrderOfTypeRequest
soapAction[bibliographicSearch] = bibliographicSearchRequest
soapAction[getOrderStatus] = getOrderStatusRequest
soapAction[findAllOpenEndUserOrders] = findAllOpenEndUserOrdersRequest
soapAction[findManuallyFinishedIllOrders] = findManuallyFinishedIllOrdersRequest

; prefixes and namespaces
xmlns[NONE] = http://oss.dbc.dk/ns/openfindorder
xmlns[xml] = http://www.w3.org/XML/1998/namespace
xmlns[wsdl] = http://schemas.xmlsoap.org/wsdl/
xmlns[xs] = http://www.w3.org/2001/XMLSchema
xmlns[ofow] = http://oss.dbc.dk/ns/openfindorder_wsdl
xmlns[ofo] = http://oss.dbc.dk/ns/openfindorder
xmlns[soap] = http://schemas.xmlsoap.org/wsdl/soap

; schema-file
schema=openfindorder.xsd

; where to find openAgency
openagency_agency_list = http://some.server.dk/OpenAgency/?action=pickupAgencyList&agencyId=%s&libraryStatus=alle&outputType=php

; where to find solr indexes
solr_order_uri = http://some.server.dk:8081/solr/select?

connectionstring = ora_user/ora_passwd@some.server.dk
vip = ora_user/ora_passwd@some.server.dk

; logfile for verbose output
logfile = /tmp/openfindorder.log

; set verboselevel
;   WARNING - simple warnings
;   ERROR   - errors in response
;   FATAL   - major errors
;   STAT    - Stat√≠stical logging
;   TIMER   - timer logging
;   TRACE   - program trace
;   DEBUG   - debugging info
;   Z3959   - calls to z3950 services
;   OCI     - oracle
verbose = WARNING+ERROR+FATAL+STAT+TIMER+TRACE+DEBUG+Z3950+OCI

; format for automatic timer dump %s is the soap-action used
dump_timer = openfindorder(%s)


[aaa]
; aaa Authentication, Access control and Accounting
;
; Creates a authentication object from aaa_ip_rights, aaa_fors_rights or aaa_credentials - in that order
;
; Rights can be set here for selected ip-addresses
; aaa_ip_rights[group-identifier][ip_list] = list of ip's
; aaa_ip_rights[group-identifier][ressource][<named ressource>] = right to <named ressource>
; aaa_ip_rights[group-identifier][ressource][<named ressource 2>] = right to <named ressource 2>
;
aaa_ip_rights[dbc][ip_list] = 172.16.0.0-172.31.255.255;193.111.162.0-193.111.162.255
aaa_ip_rights[dbc][ressource]['netpunkt.dk'] = 500
;
; if not found in aaa_ip_rights the authentication object is created from the FORS
; either by using the WS specified by aaa_fors_rights or by OCI specified by aaa_credentials
;
; uri for a fors rights webservice - aaa_fors_rights have precedence over aaa_credentials
;aaa_fors_rights = http://forsrights.some.server/?action=forsRights&outputType=php&userIdAut=%s&groupIdAut=%s&passwordAut=%s&ipAddress=%s
;
; oci credentials for FORS server
;aaa_credentials = ora_user/ora_passwd@some.server.dk
;
; memcache server for the authentication object - use localhost in one-webserver environment
;aaa_cache_address = localhost:11211
; number of seconds to cache authentication and access rights info
;aaa_cache_seconds = 3600
;


[rest]
; REST parameters for SOAPAction
;
; use xml.path.to.par notation to solve name-conflicts
; action[thisSoapAction][foo][] = some.number
; action[thisSoapAction][bar][] = another.number
; to build 
; <thisSoapAction>
;   <foo>
;     <number>nn</number>
;   </foo>
;   <bar>
;     <number>mm</number>
;   </bar>
; </thisSoapAction>
; from url: action=thisSoapAction&some.number=nn&another.number=mm
;
; action[ALL] defines parameter used in all defined soap-actions
;
action[ALL][] = outputType
action[ALL][] = callback
action[ALL][] = requesterAgencyId
action[ALL][] = responderAgencyId
action[ALL][] = agency
action[ALL][authentication][] = groupIdAut
action[ALL][authentication][] = passwordAut
action[ALL][authentication][] = userIdAut
action[ALL][] = sortKey

action[findManuallyFinishedIllOrders][] = providerOrderState
action[findManuallyFinishedIllOrders][] = requesterOrderState
action[findManuallyFinishedIllOrders][] = orderSystem
action[findManuallyFinishedIllOrders][] = fromDate
action[findManuallyFinishedIllOrders][] = toDate
action[findManuallyFinishedIllOrders][] = start
action[findManuallyFinishedIllOrders][] = stepValue

action[findAllOpenEndUserOrders][] = orderSystem
action[findAllOpenEndUserOrders][] = fromDate
action[findAllOpenEndUserOrders][] = toDate
action[findAllOpenEndUserOrders][] = start
action[findAllOpenEndUserOrders][] = stepValue

action[findAllIllOrders][] = orderSystem
action[findAllIllOrders][] = fromDate
action[findAllIllOrders][] = toDate
action[findAllIllOrders][] = start
action[findAllIllOrders][] = stepValue

action[findAllNonIllOrders][] = orderSystem
action[findAllNonIllOrders][] = fromDate
action[findAllNonIllOrders][] = toDate
action[findAllNonIllOrders][] = start
action[findAllNonIllOrders][] = stepValue

action[findOpenIllOrders][] = orderSystem
action[findOpenIllOrders][] = fromDate
action[findOpenIllOrders][] = toDate
action[findOpenIllOrders][] = start
action[findOpenIllOrders][] = stepValue

action[findClosedIllOrders][] = orderStatus
action[findClosedIllOrders][] = orderSystem
action[findClosedIllOrders][] = fromDate
action[findClosedIllOrders][] = toDate
action[findClosedIllOrders][] = start
action[findClosedIllOrders][] = stepValue

action[findLocalizedEndUserOrders][] = closed
action[findLocalizedEndUserOrders][] = orderSystem
action[findLocalizedEndUserOrders][] = fromDate
action[findLocalizedEndUserOrders][] = toDate
action[findLocalizedEndUserOrders][] = start
action[findLocalizedEndUserOrders][] = stepValue

action[findNonLocalizedEndUserOrders][] = closed
action[findNonLocalizedEndUserOrders][] = orderSystem
action[findNonLocalizedEndUserOrders][] = fromDate
action[findNonLocalizedEndUserOrders][] = toDate
action[findNonLocalizedEndUserOrders][] = start
action[findNonLocalizedEndUserOrders][] = stepValue

action[findAllOrders][] = orderSystem
action[findAllOrders][] = fromDate
action[findAllOrders][] = toDate
action[findAllOrders][] = start
action[findAllOrders][] = stepValue

action[findSpecificOrder][] = orderId

action[findOrdersFromUser][] = userId
action[findOrdersFromUser][] = userMail
action[findOrdersFromUser][] = userName
action[findOrdersFromUser][] = orderSystem
action[findOrdersFromUser][] = fromDate
action[findOrdersFromUser][] = toDate
action[findOrdersFromUser][] = start
action[findOrdersFromUser][] = stepValue
action[findOrdersFromUser][] = orderType

action[findOrdersFromUnknownUser][] = orderSystem
action[findOrdersFromUnknownUser][] = fromDate
action[findOrdersFromUnknownUser][] = toDate
action[findOrdersFromUnknownUser][] = start
action[findOrdersFromUnknownUser][] = stepValue

action[findOrdersWithStatus][] = orderSystem
action[findOrdersWithStatus][] = fromDate
action[findOrdersWithStatus][] = toDate
action[findOrdersWithStatus][] = start
action[findOrdersWithStatus][] = stepValue

action[findOrdersWithAutoForwardReason][] = autoForwardReason
action[findOrdersWithAutoForwardReason][] = orderSystem
action[findOrdersWithAutoForwardReason][] = fromDate
action[findOrdersWithAutoForwardReason][] = toDate
action[findOrdersWithAutoForwardReason][] = start
action[findOrdersWithAutoForwardReason][] = stepValue

action[findAutomatedOrders][] = orderSystem
action[findAutomatedOrders][] = fromDate
action[findAutomatedOrders][] = toDate
action[findAutomatedOrders][] = start
action[findAutomatedOrders][] = stepValue

action[findNonAutomatedOrders][] = orderSystem
action[findNonAutomatedOrders][] = fromDate
action[findNonAutomatedOrders][] = toDate
action[findNonAutomatedOrders][] = start
action[findNonAutomatedOrders][] = stepValue

action[findOrderType][] = articleDirect
action[findOrderType][] = kvik
action[findOrderType][] = norfri
action[findOrderType][] = orderSystem
action[findOrderType][] = fromDate
action[findOrderType][] = toDate
action[findOrderType][] = start
action[findOrderType][] = stepValue

action[bibliographicSearch][] = author
action[bibliographicSearch][] = bibliographicRecordId
action[bibliographicSearch][] = isbn
action[bibliographicSearch][] = issn
action[bibliographicSearch][] = mediumType
action[bibliographicSearch][] = title
action[bibliographicSearch][] = orderSystem
action[bibliographicSearch][] = fromDate
action[bibliographicSearch][] = toDate
action[bibliographicSearch][] = start
action[bibliographicSearch][] = stepValue
action[bibliographicSearch][] = orderType

action[getOrderStatus][] = orderId
action[getOrderStatus][] = orderSystem
action[getOrderStatus][] = fromDate
action[getOrderStatus][] = toDate
action[getOrderStatus][] = start
action[getOrderStatus][] = stepValue

; this part is database-specific.
; map fields in databasetable(ors_order)

[ors_order]
ACTIVE=
ACTIVEID=
ARTICLEDIRECT=
ARTICLEFIRSTNOTE=
o.AUTHOR=
AUTHOROFCOMPONENT=
AUTOFORWARDDELIVERTODAY=
AUTOFORWARDREASON=
AUTOFORWARDRESULT=
BIBLIOGRAPHICCATEGORY=
BIBLIOGRAPHICRECORDAGENCYID=
BIBLIOGRAPHICRECORDID=
CALLNUMBER=
CANCELLED=
CANCELLEDDATE=to_char(CANCELLEDDATE,'YYYY-MM-DD') CANCELLEDDATE
CLOSED=
CLOSEDDATE=to_char(CLOSEDDATE,'YYYY-MM-DD') CLOSEDDATE
COPY=
;CREATIONDATE=to_char(CREATIONDATE,'YYYY-MM-DD HH24:MI:SS') CREATIONDATE
CREATIONDATE=to_char(SYS_EXTRACT_UTC(CREATIONDATE),'YYYY-MM-DD HH24:MI:SS') CREATIONDATE
;CREATIONDATE=SYS_EXTRACT_UTC(CREATIONDATE) CREATIONDATE
DATEDUE=to_char(DATEDUE,'YYYY-MM-DD') DATEDUE
DESIREDDATEDUE=to_char(DESIREDDATEDUE,'YYYY-MM-DD') DESIREDDATEDUE
EDITION=
EXACTEDITION=
EXPECTEDDELIVERY=to_char(EXPECTEDDELIVERY,'YYYY-MM-DD') EXPECTEDDELIVERY
FORWARDORDERID=
ISBN=
ISSHIPPED=
ISSN=
ISSUE=
ITEMID=
KVIK=
LANGUAGE=
LASTRENEWALDATE=to_char(LASTRENEWALDATE,'YYYY-MM-DD') LASTRENEWALDATE
LATESTPROVIDERNOTE=
LATESTREQUESTERNOTE=
LOCALHOLDINGSID=
LOOKEDUPUSERID=
MEDIUMTYPE=
NEEDBEFOREDATE=to_char(NEEDBEFOREDATE,'YYYY-MM-DD') NEEDBEFOREDATE
NORFRI=
NUMBEROFRENEWALS=
o.ORDERID=
ORDERSYSTEM=
ORDERTYPE=
ORIGINALORDERID=
PAGINATION=
PICKUPAGENCYID=
PICKUPAGENCYSUBDIVISION=
PLACEOFPUBLICATION=
PLACEONHOLD=
PROVIDERANSWER=
PROVIDERANSWERDATE=to_char(PROVIDERANSWERDATE,'YYYY-MM-DD') PROVIDERANSWERDATE
PROVIDERANSWERREASON=
PROVIDERORDERSTATE=
PUBLICATIONDATE=
PUBLICATIONDATEOFCOMPONENT=
PUBLISHER=
RECEIVEDDATE=
RENEWED=
RENEWPENDINGDATE=to_char(RENEWPENDINGDATE,'YYYY-MM-DD') RENEWPENDINGDATE
o.REQUESTERID=
REQUESTERINITIALS=
REQUESTERORDERSTATE=
RESENDTOREQUESTERDATE=to_char(RESENDTOREQUESTERDATE,'YYYY-MM-DD') RESENDTOREQUESTERDATE
RESENDTORESPONDERDATE=to_char(RESENDTORESPONDERDATE,'YYYY-MM-DD') RESENDTORESPONDERDATE
RESPONDERID=
RETURNEDDATE=to_char(RETURNEDDATE,'YYYY-MM-DD') RETURNEDDATE
SERIESTITLENUMBER=
SHIPPEDDATE=to_char(SHIPPEDDATE,'YYYY-MM-DD') SHIPPEDDATE
SHIPPEDSERVICETYPE=
o.TITLE=
TITLEOFCOMPONENT=
USERADDRESS=
USERAGENCYID=
USERDATEOFBIRTH=
USERID=
USERIDAUTHENTICATED=
USERIDTYPE=
USERMAIL=
o.USERNAME=
USERREFERENCESOURCE=
USERTELEPHONE=
VERIFICATIONREFERENCESOURCE=
VOLUME=
WANTSRECEIPT=
WORLDCATNOTE=

[howru]
test[] = findAllOrders&requesterAgencyId=716702&agency=716700&orderSystem=pallesgavebod
preg_match[] = result
error[] = ERROR findAllOrders&requesterAgencyId=716702&agency=716700&orderSystem=pallesgavebod

